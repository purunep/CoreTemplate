{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.css","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/login/login.component.css","webpack:///./app/login/login.component.html","webpack:///./app/login/login.component.ts","webpack:///./app/product/cart/cart.component.css","webpack:///./app/product/cart/cart.component.html","webpack:///./app/product/cart/cart.component.ts","webpack:///./app/product/checkout/checkout.component.css","webpack:///./app/product/checkout/checkout.component.html","webpack:///./app/product/checkout/checkout.component.ts","webpack:///./app/product/product-list/product-list.component.css","webpack:///./app/product/product-list/product-list.component.html","webpack:///./app/product/product-list/product-list.component.ts","webpack:///./app/product/shop/shop.component.css","webpack:///./app/product/shop/shop.component.html","webpack:///./app/product/shop/shop.component.ts","webpack:///./app/shared/data.service.ts","webpack:///./app/shared/order.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Shopping List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './product/product-list/product-list.component';\nimport { DataService } from './shared/data.service';\nimport { CartComponent } from './product/cart/cart.component';\nimport { ShopComponent } from './product/shop/shop.component';\nimport { CheckoutComponent } from './product/checkout/checkout.component';\nimport { LoginComponent } from './login/login.component';\n\nlet routes = [\n{path: \"\", component: ShopComponent},\n{path:\"checkout\", component:CheckoutComponent},\n{path:\"login\", component:LoginComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    CartComponent,\n    ShopComponent,\n    CheckoutComponent,\n    LoginComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      RouterModule.forRoot(routes, {\n        useHash: true,\n        enableTracing: false\n      })\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 col-md-offset-4\\\">\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{errorMessage}}</div>\\n    <form (submit)=\\\"onLogin()\\\" #theform=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"creds.username\\\" required />\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">User name is required.</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"creds.password\\\" required/>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is required.</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theform.invalid\\\" />\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { DataService } from './../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  errorMessage: string = \"\";\n  public creds = {\n    username: \"\",\n    password: \"\"\n  };\n\n  constructor(private data: DataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin() {\n    this.data.login(this.creds).subscribe(success => {\n      if (success) {\n        if (this.data.order.items.length == 0) {\n          this.router.navigate([\"\"]);\n        }\n        else {\n          this.router.navigate([\"checkout\"]);\n        }\n      }\n    },\n      err =>\n        this.errorMessage = \"Failed to login\");\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3> Shopping Cart </h3>\\n<div>#/Items: {{data.order.items.length}}</div>\\n<div>SubTotal: {{data.order.subTotal | currency:\\\"USD\\\":true }} </div>\\n<table class=\\\"table table-condensed table-hover\\\">\\n<thead>\\n    <tr>\\n        <td>Product</td>\\n        <td>#</td>\\n        <td>$</td>\\n        <td>Total</td>\\n    </tr>\\n</thead>\\n<tbody>\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\n        <td>{{o.productCategory}}</td>\\n        <td>{{o.quantity}}</td>\\n        <td>{{o.unitPrice | currency:\\\"USD\\\":true}}</td>\\n        <td>{{(o.quantity * o.unitPrice)| currency:\\\"USD\\\":true}}</td>\\n    </tr>\\n</tbody>\\n</table>\\n<button class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length >0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\\n\"","import { DataService } from './../../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor(private data: DataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onCheckout() {\n    if(this.data.LoginRequired) {\n       this.router.navigate([\"login\"]);\n    }\n\n    else {\n      this.router.navigate([\"checkout\"]);\n    }\n  }\n\n}\n","module.exports = \".checkout-thumb {\\r\\n    max-width: 100px;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{errorMessage}}</div>\\n  <h3>Confirm Order</h3>\\n  <table class=\\\"table table-bordered table-hover\\\">\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\n      <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\n      <td>{{ o.quantity }}</td>\\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\\n    </tr>\\n  </table>\\n  <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\n    <table class=\\\"table table-condensed\\\">\\n      <tr>\\n        <td class=\\\"text-right\\\">Subtotal</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Shipping</td>\\n        <td class=\\\"text-right\\\">$ 0.00</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Total:</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\n      </tr>\\n    </table>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\n  </div>\\n\\n</div>\"","import { DataService } from './../../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n errorMessage: string = \"\";\n  constructor(private data: DataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  \n  onCheckout() {\n    this.data.checkout().subscribe(success => {\n      if(success) {\n        this.router.navigate([\"\"]);\n      }\n    }, err => this.errorMessage = \"Failed to checout.\");\n  }\n\n}\n","module.exports = \"img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.product-info .product-name{\\r\\nfont-size:large;\\r\\nfont-weight:bold;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n\\n  <div class=\\\"product-info col-md-4\\\" *ngFor = \\\"let p of products\\\">\\n   <div class=\\\"card bg-light p-1 m-1\\\">\\n    <img src=\\\"/img/{{ p.artId }}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.title\\\">\\n    <div class=\\\"product-name\\\">{{p.category}} - {{p.size}}</div>\\n    <ul class=\\\"list-group product-props\\\">\\n      <li class=\\\"list-group-item\\\"><strong>Price</strong>: {{p.price | currency:\\\"USD\\\": true}}</li>\\n      <li class=\\\"list-group-item\\\"><strong>Artist</strong>: {{p.artist}}</li>\\n      <li class=\\\"list-group-item\\\"><strong>Title</strong>: {{p.title}}</li>\\n      <li class=\\\"list-group-item\\\"><strong>Description</strong>:{{p.artDescription}}</li>\\n    </ul>\\n    <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\n  </div>\\n      </div>\\n\\n</div>\"","import { Product } from './../../shared/product';\nimport { DataService } from './../../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  products: Product[];\n  constructor(private data: DataService) {\n\n  }\n\n  ngOnInit() {\n    this.data.loadProducts()\n      .subscribe(success => {\n        if (success) {\n          this.products = this.data.products;\n        }\n      })\n  }\n\n  addProduct(product: Product) {\n    this.data.AddToOrder(product);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n    <h3>{{ title }}</h3>\\n    <app-product-list> </app-product-list>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"card bg-light p-2\\\">\\n      <app-cart></app-cart>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Product } from './product';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { Observable } from 'rxjs';\nimport { Order, OrderItem } from './order';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n    private token: string = \"\";\n    private tokenExpiration: Date;\n\n    order: Order = new Order();\n    products: Product[] = [];\n    constructor(private http: HttpClient) { }\n\n    loadProducts(): Observable<boolean> {\n        return this.http.get('/api/products')\n            .pipe(\n                map((data: Product[]) => {\n                    this.products = data;\n                    return true;\n                })\n            );\n    }\n\n\n    public get LoginRequired(): boolean {\n        return this.token.length <= 0 || this.tokenExpiration > new Date();\n    }\n\n    login(creds): Observable<boolean> {\n        return this.http\n            .post(\"/account/createtoken\", creds)\n            .pipe(\n                map((data: any) => {\n                    this.token = data.token;\n                    this.tokenExpiration = data.expiration;\n                    return true;\n                })\n            );\n    }\n\n    public checkout(): Observable<boolean> {\n        if(!this.order.orderNumber) {\n            this.order.orderNumber = \n            this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\n        }\n        return this.http.post(\"/api/orders\", this.order, {\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\n        })\n            .pipe(\n                map(response => {\n                    this.order = new Order();\n                    return true;\n                })\n            );\n    }\n\n    public AddToOrder(product: Product) {\n\n        let item: OrderItem = this.order.items.find(i => i.productId == product.id);\n        if (item) {\n            item.quantity++;\n        }\n        else {\n            item = new OrderItem();\n            item.productId = product.id;\n            item.productArtId = product.artId;\n            item.productArtist = product.artist;\n            item.productCategory = product.category;\n            item.productSize = product.size;\n            item.productTitle = product.title;\n            item.unitPrice = product.price;\n            item.quantity = 1;\n            this.order.items.push(item);\n        }\n\n\n    }\n}\n","import * as _ from \"lodash\";\r\n\r\nexport class Order{\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n    get subTotal(): number{\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity) );\r\n    }\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}